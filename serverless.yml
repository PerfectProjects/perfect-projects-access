service: ${self:custom.prefix}-access

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  region: ${opt:region}
  stage: ${opt:stage}
  stackName: ${self:custom.prefix}-access
  iam:
    role:
      name: ${self:custom.prefix}-access-role
      statements:
        - Effect: 'Allow'
          Resource: '*'
          Action: 'iam:DeleteBucket'
  deploymentBucket:
    name: ${self:custom.prefix}-deployments


plugins:
  - serverless-deployment-bucket

custom:
  prefix: perfect-projects-${self:provider.stage}-${self:provider.region}

resources:
  Resources:
    PerfectProjectsUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AliasAttributes:
          - preferred_username
          - email
        AutoVerifiedAttributes:
          - email
        UsernameConfiguration:
          CaseSensitive: False
        UserPoolName: ${self:custom.prefix}-user-pool
    PerfectProjectUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        AccessTokenValidity: 5
        ClientName: ${self:custom.prefix}
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: True
        IdTokenValidity: 5
        PreventUserExistenceErrors: ENABLED
        RefreshTokenValidity: 30
        UserPoolId: !Ref PerfectProjectsUserPool
        TokenValidityUnits:
          AccessToken: minutes
          IdToken: minutes
          RefreshToken: days
        WriteAttributes:
          - preferred_username
          - email